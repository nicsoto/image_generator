"""
Script para generar las 8 escenas del cuento "El Secreto de los Dientes Felices"
Usa el modelo Gemini para mantener coherencia visual entre todas las escenas
"""

from google import genai
from PIL import Image

# Configurar API
API_KEY = "AIzaSyD6B6z-Q8En35eLWd401WDH6Rcvy5zkNZk"
client = genai.Client(api_key=API_KEY)

# Definici√≥n de personajes (para mantener coherencia)
PERSONAJES = """
PERSONAJES DEL CUENTO (mantener estas caracter√≠sticas en TODAS las escenas):
- Lucas: ni√±o de 7 a√±os, sonrisa brillante con dientes blancos, usa camisa azul
- Sofia: ni√±a de 7 a√±os, cabello rizado, vestido rosa
- Dr. Muelitas: dentista de 40 a√±os, bata blanca, bigote, sonrisa amplia
"""

# Escenas del cuento
escenas = [
    {
        "numero": 1,
        "descripcion": "Lucas sonriendo ampliamente mientras se balancea en el columpio del parque, mostrando sus dientes blancos y brillantes. Sofia est√° cerca mir√°ndolo con curiosidad. Ambiente de parque soleado con √°rboles y flores. Estilo ilustraci√≥n infantil colorida.",
        "archivo": "escena_01_lucas_columpio.png"
    },
    {
        "numero": 2,
        "descripcion": "Lucas baj√°ndose del columpio y se√±alando hacia la distancia con expresi√≥n entusiasta, hablando con Sofia. Mismo parque, ambiente alegre. Estilo ilustraci√≥n infantil colorida.",
        "archivo": "escena_02_lucas_senala.png"
    },
    {
        "numero": 3,
        "descripcion": "Dr. Muelitas recibiendo a Lucas y Sofia en la puerta de su consultorio dental colorido, con sonrisa c√°lida. Consultorio con decoraci√≥n infantil, posters de dientes felices en las paredes. Estilo ilustraci√≥n infantil colorida.",
        "archivo": "escena_03_llegada_consultorio.png"
    },
    {
        "numero": 4,
        "descripcion": "Sofia mirando alrededor del consultorio dental con ojos curiosos, se√±alando los posters educativos en la pared. Lucas y Dr. Muelitas est√°n cerca. Interior del consultorio colorido y amigable. Estilo ilustraci√≥n infantil colorida.",
        "archivo": "escena_04_sofia_curiosa.png"
    },
    {
        "numero": 5,
        "descripcion": "Dr. Muelitas sosteniendo un cepillo de dientes gigante de demostraci√≥n y un modelo grande de dientes, explicando a los ni√±os. Lucas y Sofia escuchando atentos. Interior del consultorio. Estilo ilustraci√≥n infantil colorida.",
        "archivo": "escena_05_doctor_ense√±a.png"
    },
    {
        "numero": 6,
        "descripcion": "Lucas asintiendo seriamente mientras el Dr. Muelitas muestra la t√©cnica de cepillado circular en el modelo de dientes. Sofia observa atenta. Interior del consultorio. Estilo ilustraci√≥n infantil colorida.",
        "archivo": "escena_06_lucas_aprende.png"
    },
    {
        "numero": 7,
        "descripcion": "Sofia practicando movimientos de cepillado en el aire con un cepillo, expresi√≥n concentrada y determinada. Lucas y Dr. Muelitas mir√°ndola con aprobaci√≥n. Interior del consultorio. Estilo ilustraci√≥n infantil colorida.",
        "archivo": "escena_07_sofia_practica.png"
    },
    {
        "numero": 8,
        "descripcion": "Los tres personajes (Lucas, Sofia y Dr. Muelitas) sonriendo ampliamente frente al espejo del consultorio, mostrando sus dientes felices. Ambiente celebratorio y alegre. Estilo ilustraci√≥n infantil colorida.",
        "archivo": "escena_08_final_feliz.png"
    }
]

def generar_imagen(descripcion, imagen_referencia=None):
    """Genera una imagen usando Gemini"""
    
    prompt = f"""{PERSONAJES}

ESCENA A ILUSTRAR:
{descripcion}

INSTRUCCIONES CR√çTICAS:
- NO incluir texto, di√°logos, globos de texto ni vi√±etas en la imagen
- Mantener EXACTAMENTE las mismas caracter√≠sticas de los personajes en todas las escenas
- Estilo: ilustraci√≥n infantil colorida, amigable, educativa
- Colores brillantes y alegres
- Sin texto visible en la imagen (el di√°logo es por audio)
"""

    if imagen_referencia:
        # Con referencia para mantener coherencia
        prompt += "\n- MANT√âN las caracter√≠sticas visuales de los personajes de la imagen de referencia"
        img = Image.open(imagen_referencia)
        response = client.models.generate_content(
            model="gemini-2.5-flash-image",
            contents=[prompt, img]
        )
    else:
        # Primera escena sin referencia
        response = client.models.generate_content(
            model="gemini-2.5-flash-image",
            contents=[prompt]
        )
    
    # Extraer imagen
    for part in response.parts:
        if hasattr(part, 'inline_data') and part.inline_data is not None:
            return part.inline_data.data
    
    # Intentar desde candidates
    if hasattr(response, 'candidates') and response.candidates:
        for candidate in response.candidates:
            if hasattr(candidate, 'content') and candidate.content.parts:
                for part in candidate.content.parts:
                    if hasattr(part, 'inline_data') and part.inline_data is not None:
                        return part.inline_data.data
    
    return None

print("=" * 70)
print("üé® GENERANDO CUENTO: El Secreto de los Dientes Felices")
print("=" * 70)
print("\nüìñ Generando 8 escenas con coherencia visual...")
print("‚ö†Ô∏è  Las im√°genes NO incluir√°n texto (el di√°logo es por audio)\n")

imagen_referencia = None

for escena in escenas:
    print(f"\n{'=' * 70}")
    print(f"üé¨ ESCENA {escena['numero']} de 8")
    print(f"{'=' * 70}")
    print(f"üìù {escena['descripcion'][:100]}...")
    
    print(f"\nüé® Generando imagen...")
    imagen_data = generar_imagen(escena['descripcion'], imagen_referencia)
    
    if imagen_data:
        with open(escena['archivo'], 'wb') as f:
            f.write(imagen_data)
        print(f"‚úÖ Guardada: {escena['archivo']}")
        
        # La primera imagen es la referencia para las dem√°s
        if escena['numero'] == 1:
            imagen_referencia = escena['archivo']
            print(f"üìå Esta ser√° la referencia para mantener coherencia visual")
    else:
        print(f"‚ùå Error generando escena {escena['numero']}")

print(f"\n{'=' * 70}")
print("‚úÖ ¬°CUENTO COMPLETO GENERADO!")
print(f"{'=' * 70}")
print("\nüìÅ Archivos generados:")
for escena in escenas:
    print(f"  - {escena['archivo']}")
print("\n‚ú® Todas las im√°genes mantienen coherencia visual de personajes")
print("üì¢ Sin texto en las im√°genes (di√°logos por audio)")
