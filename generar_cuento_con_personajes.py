"""
Generador de Cuentos con Personajes Consistentes
================================================

Este script genera cuentos usando SIEMPRE los mismos personajes de referencia
para mantener coherencia visual en todos los cuentos del proyecto.

USO:
1. Define tu cuento en la secci√≥n ESCENAS
2. Especifica qu√© personajes aparecen en cada escena
3. El script usar√° autom√°ticamente las im√°genes de referencia
4. ¬°Listo! Coherencia visual garantizada
"""

from google import genai
from PIL import Image
import os

# Configurar API
API_KEY = "AIzaSyD6B6z-Q8En35eLWd401WDH6Rcvy5zkNZk"
client = genai.Client(api_key=API_KEY)

# ============================================================================
# PERSONAJES DISPONIBLES (con sus referencias visuales)
# ============================================================================

PERSONAJES = {
    "lucas": {
        "nombre": "Lucas",
        "descripcion": "ni√±o de 7 a√±os, cabello casta√±o corto, camisa azul celeste, sonrisa brillante con dientes blancos",
        "referencia": "personajes/lucas/lucas_referencia.png",
        "descripcion_file": "personajes/lucas/lucas_descripcion.txt"
    },
    "sofia": {
        "nombre": "Sofia",
        "descripcion": "ni√±a de 7 a√±os, cabello rizado casta√±o oscuro, vestido rosa intenso, expresi√≥n curiosa",
        "referencia": "personajes/sofia/sofia_referencia.png",
        "descripcion_file": "personajes/sofia/sofia_descripcion.txt"
    },
    "dr_muelitas": {
        "nombre": "Dr. Muelitas",
        "descripcion": "dentista de 40 a√±os, bata blanca, bigote, gafas redondas, sonrisa amplia y amable",
        "referencia": "personajes/dr_muelitas/dr_muelitas_referencia.png",
        "descripcion_file": "personajes/dr_muelitas/dr_muelitas_descripcion.txt"
    }
}

# ============================================================================
# CONFIGURACI√ìN DEL CUENTO
# ============================================================================

TITULO_CUENTO = "El Secreto de los Dientes Felices"

# Escenas del cuento
# personajes_en_escena: lista de IDs de personajes que aparecen ["lucas", "sofia"]
ESCENAS = [
    {
        "numero": 1,
        "personajes_en_escena": ["lucas", "sofia"],
        "descripcion": "Lucas sonriendo ampliamente mientras se balancea en el columpio del parque, mostrando sus dientes blancos y brillantes. Sofia est√° cerca mir√°ndolo con curiosidad. Ambiente de parque soleado con √°rboles y flores.",
        "archivo": "escena_01_lucas_columpio.png"
    },
    {
        "numero": 2,
        "personajes_en_escena": ["lucas", "sofia"],
        "descripcion": "Lucas baj√°ndose del columpio y se√±alando hacia la distancia con expresi√≥n entusiasta, hablando con Sofia. Mismo parque, ambiente alegre.",
        "archivo": "escena_02_lucas_senala.png"
    },
    {
        "numero": 3,
        "personajes_en_escena": ["lucas", "sofia", "dr_muelitas"],
        "descripcion": "Dr. Muelitas recibiendo a Lucas y Sofia en la puerta de su consultorio dental colorido, con sonrisa c√°lida. Consultorio con decoraci√≥n infantil, posters de dientes felices en las paredes.",
        "archivo": "escena_03_llegada_consultorio.png"
    },
    {
        "numero": 4,
        "personajes_en_escena": ["lucas", "sofia", "dr_muelitas"],
        "descripcion": "Sofia mirando alrededor del consultorio dental con ojos curiosos, se√±alando los posters educativos en la pared. Lucas y Dr. Muelitas est√°n cerca. Interior del consultorio colorido y amigable.",
        "archivo": "escena_04_sofia_curiosa.png"
    },
    {
        "numero": 5,
        "personajes_en_escena": ["lucas", "sofia", "dr_muelitas"],
        "descripcion": "Dr. Muelitas sosteniendo un cepillo de dientes gigante de demostraci√≥n y un modelo grande de dientes, explicando a los ni√±os. Lucas y Sofia escuchando atentos. Interior del consultorio.",
        "archivo": "escena_05_doctor_ense√±a.png"
    },
    {
        "numero": 6,
        "personajes_en_escena": ["lucas", "dr_muelitas", "sofia"],
        "descripcion": "Lucas asintiendo seriamente mientras el Dr. Muelitas muestra la t√©cnica de cepillado circular en el modelo de dientes. Sofia observa atenta. Interior del consultorio.",
        "archivo": "escena_06_lucas_aprende.png"
    },
    {
        "numero": 7,
        "personajes_en_escena": ["sofia", "lucas", "dr_muelitas"],
        "descripcion": "Sofia practicando movimientos de cepillado en el aire con un cepillo, expresi√≥n concentrada y determinada. Lucas y Dr. Muelitas mir√°ndola con aprobaci√≥n. Interior del consultorio.",
        "archivo": "escena_07_sofia_practica.png"
    },
    {
        "numero": 8,
        "personajes_en_escena": ["lucas", "sofia", "dr_muelitas"],
        "descripcion": "Los tres personajes (Lucas, Sofia y Dr. Muelitas) sonriendo ampliamente frente al espejo del consultorio, mostrando sus dientes felices. Ambiente celebratorio y alegre.",
        "archivo": "escena_08_final_feliz.png"
    }
]

# ============================================================================
# FUNCIONES
# ============================================================================

def cargar_referencias_personajes(personajes_ids):
    """Carga las im√°genes de referencia de los personajes"""
    referencias = []
    descripciones = []
    
    for pid in personajes_ids:
        if pid in PERSONAJES:
            p = PERSONAJES[pid]
            if os.path.exists(p["referencia"]):
                referencias.append(p["referencia"])
            descripciones.append(f"- {p['nombre']}: {p['descripcion']}")
    
    return referencias, "\n".join(descripciones)

def generar_imagen(descripcion_escena, personajes_en_escena):
    """Genera una imagen usando las referencias de los personajes"""
    
    # Obtener referencias y descripciones
    referencias, desc_personajes = cargar_referencias_personajes(personajes_en_escena)
    
    # Construir prompt
    prompt = f"""PERSONAJES EN ESTA ESCENA (mantener EXACTAMENTE estas caracter√≠sticas):
{desc_personajes}

ESCENA A ILUSTRAR:
{descripcion_escena}

INSTRUCCIONES CR√çTICAS:
- MANT√âN las caracter√≠sticas EXACTAS de los personajes de las im√°genes de referencia
- Los personajes deben verse ID√âNTICOS a las referencias (misma ropa, mismo pelo, misma cara)
- NO incluir texto, di√°logos, globos de texto ni vi√±etas en la imagen
- Estilo: ilustraci√≥n infantil colorida, amigable, educativa
- Colores brillantes y alegres
- Sin texto visible en la imagen (el di√°logo es por audio)
"""
    
    # Generar con referencias
    contenido = [prompt]
    for ref in referencias:
        if os.path.exists(ref):
            contenido.append(Image.open(ref))
    
    response = client.models.generate_content(
        model="gemini-2.5-flash-image",
        contents=contenido
    )
    
    # Extraer imagen
    for part in response.parts:
        if hasattr(part, 'inline_data') and part.inline_data is not None:
            return part.inline_data.data
    
    if hasattr(response, 'candidates') and response.candidates:
        for candidate in response.candidates:
            if hasattr(candidate, 'content') and candidate.content.parts:
                for part in candidate.content.parts:
                    if hasattr(part, 'inline_data') and part.inline_data is not None:
                        return part.inline_data.data
    
    return None

# ============================================================================
# MAIN
# ============================================================================

print("=" * 70)
print(f"üé® GENERANDO CUENTO: {TITULO_CUENTO}")
print("=" * 70)
print(f"\nüìñ Generando {len(ESCENAS)} escenas con personajes consistentes...")
print("‚ö†Ô∏è  Las im√°genes NO incluir√°n texto (el di√°logo es por audio)")
print("\nüë• Personajes del cuento:")
for pid in set([p for escena in ESCENAS for p in escena["personajes_en_escena"]]):
    if pid in PERSONAJES:
        print(f"  - {PERSONAJES[pid]['nombre']}")
print()

for escena in ESCENAS:
    print(f"\n{'=' * 70}")
    print(f"üé¨ ESCENA {escena['numero']} de {len(ESCENAS)}")
    print(f"{'=' * 70}")
    print(f"üë• Personajes: {', '.join([PERSONAJES[p]['nombre'] for p in escena['personajes_en_escena'] if p in PERSONAJES])}")
    print(f"üìù {escena['descripcion'][:80]}...")
    
    print(f"\nüé® Generando imagen...")
    imagen_data = generar_imagen(escena['descripcion'], escena['personajes_en_escena'])
    
    if imagen_data:
        with open(escena['archivo'], 'wb') as f:
            f.write(imagen_data)
        print(f"‚úÖ Guardada: {escena['archivo']}")
    else:
        print(f"‚ùå Error generando escena {escena['numero']}")

print(f"\n{'=' * 70}")
print("‚úÖ ¬°CUENTO COMPLETO GENERADO!")
print(f"{'=' * 70}")
print("\nüìÅ Archivos generados:")
for escena in ESCENAS:
    print(f"  - {escena['archivo']}")
print("\n‚ú® Todos los personajes mantienen coherencia visual")
print("üì¢ Sin texto en las im√°genes (di√°logos por audio)")
print("üé≠ Se usaron las referencias oficiales de personajes")
